services:
  backend:
    build:
      context: ./hourgraph
    container_name: django_backend
    command: ["sh", "/app/entrypoint.sh", "django"]
    env_file:
      - .env
    volumes:
      - ./hourgraph:/app
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    container_name: vue_frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - backend

  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    ports: [ "6379:6379" ]
    volumes:
      - redis_data:/data

  celery_worker:
    build: ./hourgraph
    command: ["sh", "/app/entrypoint.sh", "celery_worker"]
    env_file: .env
    volumes:
      - ./hourgraph:/app
    depends_on:
      - backend
      - redis

  celery_beat:
    build: ./hourgraph
    command: ["sh", "/app/entrypoint.sh", "celery_beat"]
    env_file: .env
    volumes:
      - ./hourgraph:/app
    depends_on:
      - backend
      - redis

  telegram_bot:
      build:
        context: ./telegram_bot
      container_name: telegram_bot
      env_file:
        - .env  # Общий файл переменных
      volumes:
        - ./hourgraph:/app/hourgraph  # Для доступа к Django-моделям
        - ./telegram_bot:/app  # Код бота
      depends_on:
        - db
        - redis
      networks:
        - default

volumes:
  postgres_data:
  redis_data: